version: "3.1"

services:
  spark:
    image: docker.io/bitnami/spark:3.5.3
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    ports:
      - "8080:8080"
      - "7077:7077"
      - "18888:8888"

  spark-worker:
    image: docker.io/bitnami/spark:3.5.3
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G # can be changed
      - SPARK_WORKER_CORES=1 # can be changed
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    ports:
      - "8081:8081"

  minio:
    image: minio/minio
    container_name: minio
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: password
    command: server /data --console-address ":9001"
    ports:
      - "19000:9000"
      - "19001:9001"

  notebook:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: jupyter
    ports:
      - "8888:8888"
      - "4040:4040"
    environment:
      JUPYTER_ENABLE_LAB: "yes"
    command: start-notebook.py --NotebookApp.token=''
    volumes:
      - ./notebooks:/home/jovyan/work/notebooks

  zookeeper1:
    image: bitnami/zookeeper:3.8.0
    container_name: zookeeper1
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "2181:2181"

  kafka1:
    image: bitnami/kafka:3.0.2
    container_name: kafka1
    depends_on:
      - zookeeper1
    ports:
      - "9092:9092"
      - "9093:9093"
      - "9095:9095"
      - "9096:9096"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper1:2181
      # Simplified listeners configuration to avoid connection issues
      KAFKA_LISTENERS: INTERNAL://kafka1:9092,OUTSIDE://0.0.0.0:9095
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:9092,OUTSIDE://localhost:9095
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CREATE_TOPICS: "tan_stops:3:1,tan_wait_times:3:1,tan_schedules:3:1"

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8082:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=kafka1
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka1:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper1:2181
    depends_on:
      - kafka1
